AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation template For Networking and Subnets to create a VPC with public and private subnets in multiple availability zones.

Parameters:
  VpcCidr:
    Type: String
    Default: 172.16.0.0/16
    Description: CIDR block for the VPC
  PublicSubnetCidr1:
    Type: String
    Default: 172.16.1.0/24
    Description: CIDR block for Public Subnet 1 AZ1
  PublicSubnetCidr2:
    Type: String
    Default: 172.16.2.0/24
    Description: CIDR block for Public Subnet 2 AZ1
  PrivateSubnetCidr1:
    Type: String
    Default: 172.16.3.0/24
    Description: CIDR block for Private Subnet 1 AZ2
  PrivateSubnetCidr2:
    Type: String
    Default: 172.16.4.0/24
    Description: CIDR block for Private Subnet 2 AZ2

Resources:
 #VPC && InternetGateway.
  #---- VPC Creation.
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: DevVPC
  #---- InternetGateway Creation.
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGatewayForDevVPC
  #---- AttachGateway To VPC.
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
      DependsOn: 
        - InternetGateway
    # NAT Gateways and Elastic IPs
  NatEip1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatEip2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEip1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: NatGateway1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEip2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: NatGateway2
 #RouteTables
  #---- Public RouteTable Creation (Info:Any component will assassin here will send/receive requests to/from anywhere).
  DefaultPublicRoute:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      DependsOn: 
        - VPC
      Tags:
        - Key: Name
          Value: DefaultPublicRoute
  #-------- Attach Rout value to DefaultPublicRoute(Accept all 0.0.0.0/0 on Gateway).
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref DefaultPublicRoute
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      DependsOn: 
        - InternetGateway
        - DefaultPublicRoute
  #---- private RouteTable and routs Creation.
  PrivateRouteTableSubNet1AZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableSubNet1AZ1

    PrivateRouteTableSubNet2AZ2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableSubNet2AZ2

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableSubNet1AZ1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      DependsOn: 
        - PrivateRouteTableSubNet1AZ1
        - NatGateway1

  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableSubNet2AZ2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      DependsOn: 
        - PrivateRouteTableSubNet2AZ2
        - NatGateway2
 #Subnets
   #---- PublicSubnet1 AZ1 Creation.
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr1
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1_AZ1
   #---- PublicSubnet2 AZ2 Creation.
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr2
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2_AZ2
   #---- PrivateSubnet1 AZ1 Creation.
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr1
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PrivateSubnet1_AZ1
   #---- PrivateSubnet2 AZ2 Creation.
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr2
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PrivateSubnet2_AZ2

#RouteTable and Subnets Association
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref DefaultPublicRoute
      DependsOn: 
        - PublicSubnet1
        - DefaultPublicRoute

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref DefaultPublicRoute
      DependsOn: 
        - PublicSubnet2
        - DefaultPublicRoute

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTableSubNet1AZ1
      DependsOn: 
        - PrivateSubnet1
        - PrivateRouteTableSubNet1AZ1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTableSubNet2AZ2
      DependsOn: 
        - PrivateSubnet2
        - PrivateRouteTableSubNet2AZ2

Outputs:
  VpcId:
    Description: The ID of the VPC
    Value: !Ref VPC
  PublicSubnet1Id:
    Description: The ID of Public Subnet 1
    Value: !Ref PublicSubnet1
  PublicSubnet2Id:
    Description: The ID of Public Subnet 2
    Value: !Ref PublicSubnet2
  PrivateSubnet1Id:
    Description: The ID of Private Subnet 1
    Value: !Ref PrivateSubnet1
  PrivateSubnet2Id:
    Description: The ID of Private Subnet 2
    Value: !Ref PrivateSubnet2
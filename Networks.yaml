AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation template for Networking and Subnets to create a VPC with public and private subnets in multiple availability zones.

Parameters:
  VpcCidr:
    Type: String
    Default: 172.16.0.0/16
    Description: CIDR block for the VPC
  PublicSubnetCidr1:
    Type: String
    Default: 172.16.1.0/24
    Description: CIDR block for Public Subnet 1
  PublicSubnetCidr2:
    Type: String
    Default: 172.16.2.0/24
    Description: CIDR block for Public Subnet 2
  PrivateSubnetCidr1:
    Type: String
    Default: 172.16.3.0/24
    Description: CIDR block for Private Subnet 1
  PrivateSubnetCidr2:
    Type: String
    Default: 172.16.4.0/24
    Description: CIDR block for Private Subnet 2

Resources:
  #VPC && InternetGateway.
  #---- VPC Creation.
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: DevVPC
  #---- InternetGateway Creation.
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGatewayForDevVPC
  #---- AttachGateway To VPC.
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
    DependsOn:
      - InternetGateway
      - VPC
  # Elastic IPs for NAT Gateways
  NatEip1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: NatEip1
  NatEip2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: NatEip2
  # NAT Gateways
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEip1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: NatGateway1
    DependsOn:
      - PublicSubnet1
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEip2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: NatGateway2
    DependsOn:
      - PublicSubnet2
  #-------------------- PublicSubnets and its Configuation --------------------
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr1
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1_AZ1
    DependsOn:
      - VPC
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr2
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2_AZ2
    DependsOn:
      - VPC
  #Public RouteTable Creation (Info:Any component will assassin here will send/receive requests to/from anywhere).
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: DefaultPublicRoute
    DependsOn:
      - VPC
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
    DependsOn:
      - PublicRouteTable
      - InternetGateway
  # Subnet Route Table Associations
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
    DependsOn:
      - PublicSubnet1
      - PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
    DependsOn:
      - PublicSubnet2
      - PublicRouteTable
  #-------------------- Private Subnets and Its Configurations --------------------
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr1
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnet1_AZ1
    DependsOn:
      - VPC
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr2
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnet2_AZ
    DependsOn:
      - VPC
  # Private Route Tables
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableSubNet1AZ1
    DependsOn:
      - VPC
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableSubNet2AZ2
    DependsOn:
      - VPC
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
    DependsOn:
      - PrivateRouteTable1
      - NatGateway1
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
    DependsOn:
      - PrivateRouteTable2
      - NatGateway2
  # Subnet Route Table Associations
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1
    DependsOn:
      - PrivateSubnet1
      - PrivateRouteTable1
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2
    DependsOn:
      - PrivateSubnet2
      - PrivateRouteTable2
Outputs:
  VpcId:
    Description: The ID of the VPC
    Value: !Ref VPC
  PublicSubnet1Id:
    Description: The ID of Public Subnet 1
    Value: !Ref PublicSubnet1
  PublicSubnet2Id:
    Description: The ID of Public Subnet 2
    Value: !Ref PublicSubnet2
  PrivateSubnet1Id:
    Description: The ID of Private Subnet 1
    Value: !Ref PrivateSubnet1
  PrivateSubnet2Id:
    Description: The ID of Private Subnet 2
    Value: !Ref PrivateSubnet2
